definitions:
  db.AccessControl:
    properties:
      black_list:
        type: string
      clientip_flow_limit:
        type: integer
      id:
        type: integer
      open_auth:
        type: integer
      service_flow_limit:
        type: integer
      service_id:
        type: integer
      white_host_name:
        type: string
      white_list:
        type: string
    type: object
  db.AppInfo:
    properties:
      app_id:
        type: string
      create_at:
        type: string
      id:
        type: integer
      is_delete:
        type: integer
      name:
        type: string
      qpd:
        type: integer
      qps:
        type: integer
      secret:
        type: string
      update_at:
        type: string
      white_ips:
        type: string
    type: object
  db.GRPCRule:
    properties:
      header_transfor:
        type: string
      id:
        type: integer
      port:
        type: integer
      service_id:
        type: integer
    type: object
  db.HTTPRule:
    properties:
      header_transform:
        type: string
      id:
        type: integer
      need_https:
        type: integer
      need_strip_uri:
        type: integer
      need_websocket:
        type: integer
      rule:
        type: string
      rule_type:
        type: integer
      service_id:
        type: integer
      url_rewrite:
        type: string
    type: object
  db.LoadBalance:
    properties:
      check_interval:
        type: integer
      check_method:
        type: integer
      check_timeout:
        type: integer
      forbid_list:
        type: string
      id:
        type: integer
      ip_list:
        type: string
      round_type:
        type: integer
      service_id:
        type: integer
      upstream_connect_timeout:
        type: integer
      upstream_header_timeout:
        type: integer
      upstream_idle_timeout:
        type: integer
      upstream_max_idle:
        type: integer
      weight_list:
        type: string
    type: object
  db.ServiceDetail:
    properties:
      access_control:
        $ref: '#/definitions/db.AccessControl'
      grpc_rule:
        $ref: '#/definitions/db.GRPCRule'
      http_rule:
        $ref: '#/definitions/db.HTTPRule'
      info:
        $ref: '#/definitions/db.ServiceInfo'
      load_balance:
        $ref: '#/definitions/db.LoadBalance'
      tcp_rule:
        $ref: '#/definitions/db.TCPRule'
    type: object
  db.ServiceInfo:
    properties:
      create_at:
        type: string
      id:
        type: integer
      is_delete:
        type: integer
      load_type:
        type: integer
      service_desc:
        type: string
      service_name:
        type: string
      update_at:
        type: string
    type: object
  db.TCPRule:
    properties:
      id:
        type: integer
      port:
        type: integer
      service_id:
        type: integer
    type: object
  io.AdminInfoOutput:
    properties:
      avatar:
        type: string
      id:
        type: integer
      intro:
        type: string
      login_time:
        type: string
      roles:
        items:
          type: string
        type: array
      user_name:
        type: string
    type: object
  io.AdminLoginInput:
    properties:
      password:
        example: "123456"
        type: string
      username:
        example: admin
        type: string
    required:
    - password
    - username
    type: object
  io.AdminLoginOutput:
    properties:
      token:
        example: token
        type: string
    type: object
  io.AppAddInput:
    properties:
      app_id:
        description: ID            int  `json:"id" form:"id" comment:"Service id"
          example:"56" validate:"required,min=1"`
        type: string
      name:
        type: string
      qpd:
        type: integer
      qps:
        type: integer
      secret:
        type: string
      white_ips:
        type: string
    required:
    - app_id
    - name
    type: object
  io.AppListItemOutput:
    properties:
      app_id:
        type: string
      create_at:
        type: string
      name:
        type: string
      qpd:
        type: integer
      qps:
        type: integer
      secret:
        type: string
      update_at:
        type: string
      white_ips:
        type: string
    type: object
  io.AppListOutput:
    properties:
      list:
        items:
          $ref: '#/definitions/io.AppListItemOutput'
        type: array
      total:
        type: integer
    type: object
  io.AppStatOutput:
    properties:
      today:
        items:
          type: integer
        type: array
      yesterday:
        items:
          type: integer
        type: array
    type: object
  io.AppUpdateInput:
    properties:
      app_id:
        type: string
      id:
        example: 56
        type: integer
      name:
        type: string
      qpd:
        type: integer
      qps:
        type: integer
      secret:
        type: string
      white_ips:
        type: string
    required:
    - app_id
    - id
    - name
    type: object
  io.ChangePwdInput:
    properties:
      password:
        example: "123456"
        type: string
    required:
    - password
    type: object
  io.DashboardGlobalFlowStatOutput:
    properties:
      today:
        items:
          type: integer
        type: array
      yesterday:
        items:
          type: integer
        type: array
    type: object
  io.DashboardGlobalServiceCountOutput:
    properties:
      count:
        items:
          $ref: '#/definitions/io.ServiceCount'
        type: array
      services:
        items:
          type: string
        type: array
    type: object
  io.DashboardSumDataOutput:
    properties:
      app_num:
        type: integer
      current_qps:
        type: integer
      service_num:
        type: integer
      today_request_num:
        type: integer
    type: object
  io.ServiceAddGRPCInput:
    properties:
      black_list:
        type: string
      client_ip_flow_limit:
        type: integer
      forbid_list:
        type: string
      head_transform:
        type: string
      ip_list:
        type: string
      open_auth:
        type: integer
      port:
        type: integer
      round_type:
        type: integer
      service_desc:
        type: string
      service_flow_limit:
        type: integer
      service_name:
        type: string
      weight_list:
        type: string
      white_host_name:
        type: string
      white_list:
        type: string
    required:
    - forbid_list
    - ip_list
    - port
    - service_desc
    - service_name
    - weight_list
    type: object
  io.ServiceAddHTTPInput:
    properties:
      black_list:
        type: string
      client_ip_flow_limit:
        type: integer
      head_transform:
        type: string
      ip_list:
        type: string
      need_https:
        type: integer
      need_strip_uri:
        type: integer
      need_websocket:
        type: integer
      open_auth:
        type: integer
      round_type:
        type: integer
      rule:
        type: string
      rule_type:
        type: integer
      service_desc:
        type: string
      service_flow_limit:
        type: integer
      service_name:
        type: string
      upstream_connect_time_out:
        type: integer
      upstream_header_time_out:
        type: integer
      upstream_idle_time_out:
        type: integer
      upstream_max_idle:
        type: integer
      url_rewrite:
        type: string
      weight_list:
        type: string
      white_list:
        type: string
    required:
    - ip_list
    - rule
    - service_desc
    - service_name
    - weight_list
    type: object
  io.ServiceAddTCPInput:
    properties:
      black_list:
        type: string
      client_ip_flow_limit:
        type: integer
      forbid_list:
        type: string
      head_transform:
        type: string
      ip_list:
        type: string
      open_auth:
        type: integer
      port:
        type: integer
      round_type:
        type: integer
      service_desc:
        type: string
      service_flow_limit:
        type: integer
      service_name:
        description: ID            int64  `json:"id" form:"id" comment:"Service id"
          example:"56" validate:"required,min=1"`
        type: string
      weight_list:
        type: string
      white_host_name:
        type: string
      white_list:
        type: string
    required:
    - forbid_list
    - ip_list
    - port
    - service_desc
    - service_name
    - weight_list
    type: object
  io.ServiceCount:
    properties:
      count:
        type: integer
      load_type:
        type: integer
      name:
        type: string
    type: object
  io.ServiceListItemOutput:
    properties:
      id:
        type: integer
      load_type:
        type: integer
      qpd:
        type: integer
      qps:
        type: integer
      service_addr:
        type: string
      service_desc:
        type: string
      service_name:
        type: string
      total_node:
        type: integer
    type: object
  io.ServiceListOutput:
    properties:
      list:
        items:
          $ref: '#/definitions/io.ServiceListItemOutput'
        type: array
      total:
        type: integer
    type: object
  io.ServiceStatOutput:
    properties:
      today:
        items:
          type: integer
        type: array
      yesterday:
        items:
          type: integer
        type: array
    type: object
  io.ServiceUpdateGRPCInput:
    properties:
      black_list:
        type: string
      client_ip_flow_limit:
        type: integer
      forbid_list:
        type: string
      head_transform:
        type: string
      id:
        example: 56
        type: integer
      ip_list:
        type: string
      open_auth:
        type: integer
      port:
        type: integer
      round_type:
        type: integer
      service_desc:
        type: string
      service_flow_limit:
        type: integer
      service_name:
        type: string
      weight_list:
        type: string
      white_host_name:
        type: string
      white_list:
        type: string
    required:
    - forbid_list
    - id
    - ip_list
    - port
    - service_desc
    - service_name
    - weight_list
    type: object
  io.ServiceUpdateHTTPInput:
    properties:
      black_list:
        type: string
      client_ip_flow_limit:
        type: integer
      head_transform:
        type: string
      id:
        example: 56
        type: integer
      ip_list:
        example: 127.0.0.1:80
        type: string
      need_https:
        type: integer
      need_strip_uri:
        type: integer
      need_websocket:
        type: integer
      open_auth:
        type: integer
      round_type:
        type: integer
      rule:
        type: string
      rule_type:
        type: integer
      service_desc:
        example: test_add_http
        type: string
      service_flow_limit:
        type: integer
      service_name:
        example: test_add_http
        type: string
      upstream_connect_time_out:
        type: integer
      upstream_header_time_out:
        type: integer
      upstream_idle_time_out:
        type: integer
      upstream_max_idle:
        type: integer
      url_rewrite:
        type: string
      weight_list:
        example: "50"
        type: string
      white_list:
        type: string
    required:
    - id
    - ip_list
    - rule
    - service_desc
    - service_name
    - weight_list
    type: object
  io.ServiceUpdateTCPInput:
    properties:
      black_list:
        type: string
      client_ip_flow_limit:
        type: integer
      forbid_list:
        type: string
      head_transform:
        type: string
      id:
        example: 56
        type: integer
      ip_list:
        type: string
      open_auth:
        type: integer
      port:
        type: integer
      round_type:
        type: integer
      service_desc:
        type: string
      service_flow_limit:
        type: integer
      service_name:
        type: string
      weight_list:
        type: string
      white_host_name:
        type: string
      white_list:
        type: string
    required:
    - forbid_list
    - id
    - ip_list
    - port
    - service_desc
    - service_name
    - weight_list
    type: object
  middleware.Response:
    properties:
      data:
        type: object
      errmsg:
        type: string
      errno:
        type: integer
      stack:
        type: object
      trace_id:
        type: object
    type: object
info:
  contact: {}
paths:
  /AppInfo/App_detail:
    get:
      consumes:
      - application/json
      description: Get service detail.
      operationId: /app/app_detail
      parameters:
      - description: service id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  $ref: '#/definitions/db.AppInfo'
              type: object
      summary: Get service detail
      tags:
      - AppInfo Management
  /admin/admin_info:
    get:
      consumes:
      - application/json
      description: Admin info.
      operationId: /admin/admin_info
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  $ref: '#/definitions/io.AdminInfoOutput'
              type: object
      summary: Admin info.
      tags:
      - Admin API.
  /admin/change_pwd:
    post:
      consumes:
      - application/json
      description: Change admin password.
      operationId: /admin/change_pwd
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.ChangePwdInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Change admin password.
      tags:
      - Admin API.
  /admin_login/login:
    post:
      consumes:
      - application/json
      description: Admin login.
      operationId: /admin_login/login
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.AdminLoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  $ref: '#/definitions/io.AdminLoginOutput'
              type: object
      summary: Admin login.
      tags:
      - Admin API.
  /admin_login/logout:
    get:
      consumes:
      - application/json
      description: Admin logout.
      operationId: /admin_login/logout
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Admin logout.
      tags:
      - Admin API.
  /dashboard/global_flow_stat:
    get:
      consumes:
      - application/json
      description: Get service statistics.
      operationId: /dashboard/global_flow_stat
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  $ref: '#/definitions/io.DashboardGlobalFlowStatOutput'
              type: object
      tags:
      - Dashboard Management
  /dashboard/global_services_count:
    get:
      consumes:
      - application/json
      description: Get service statistics.
      operationId: /dashboard/global_services_count
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  $ref: '#/definitions/io.DashboardGlobalServiceCountOutput'
              type: object
      tags:
      - Dashboard Management
  /dashboard/sum_data:
    get:
      consumes:
      - application/json
      description: Dashboard summarize data
      operationId: /dashboard/sum_data
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  $ref: '#/definitions/io.DashboardSumDataOutput'
              type: object
      summary: Dashboard summarize data
      tags:
      - Dashboard Management
  /service/service_add_grpc:
    post:
      consumes:
      - application/json
      description: Add GRPC service.
      operationId: /service/service_add_grpc
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.ServiceAddGRPCInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Add GRPC service.
      tags:
      - Service Management
  /service/service_add_http:
    post:
      consumes:
      - application/json
      description: Add HTTP service
      operationId: /service/service_add_http
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.ServiceAddHTTPInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Add HTTP service
      tags:
      - Service Management
  /service/service_add_tcp:
    post:
      consumes:
      - application/json
      description: Add TCP service.
      operationId: /service/service_add_tcp
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.ServiceAddTCPInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Add TCP service.
      tags:
      - Service Management
  /service/service_delete:
    get:
      consumes:
      - application/json
      description: Delete a service.
      operationId: /service/service_delete
      parameters:
      - description: service id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete a service
      tags:
      - Service Management
  /service/service_detail:
    get:
      consumes:
      - application/json
      description: Get service detail.
      operationId: /service/service_detail
      parameters:
      - description: service id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  $ref: '#/definitions/db.ServiceDetail'
              type: object
      summary: Get service detail
      tags:
      - Service Management
  /service/service_list:
    get:
      consumes:
      - application/json
      description: Show service lists.
      operationId: /service/service_list
      parameters:
      - description: Searching keyword
        in: query
        name: info
        type: string
      - description: Entries per page
        in: query
        name: page_size
        required: true
        type: integer
      - description: Page No.
        in: query
        name: page_no
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  $ref: '#/definitions/io.ServiceListOutput'
              type: object
      summary: Service list
      tags:
      - Service Management
  /service/service_stat:
    get:
      consumes:
      - application/json
      description: Get service statistics.
      operationId: /service/service_stat
      parameters:
      - description: service id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  $ref: '#/definitions/io.ServiceStatOutput'
              type: object
      tags:
      - Service Management
  /service/service_update_grpc:
    post:
      consumes:
      - application/json
      description: Update GRPC Service
      operationId: /service/service_update_grpc
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.ServiceUpdateGRPCInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update GRPC Service
      tags:
      - Service Management
  /service/service_update_http:
    post:
      consumes:
      - application/json
      description: Update HTTP service
      operationId: /service/service_update_http
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.ServiceUpdateHTTPInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update HTTP service
      tags:
      - Service Management
  /service/service_update_tcp:
    post:
      consumes:
      - application/json
      description: Update TCP service
      operationId: /service/service_update_tcp
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/io.ServiceUpdateTCPInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update TCP service.
      tags:
      - Service Management
swagger: "2.0"
